#!/bin/sh
#
# Name: wl-clipboard-x11
# Description: A wrapper to use wl-clipboard as a drop-in replacement to X11 clipboard tools
# Author: Ian Brunelli <ian@brunelli.me>
# Source: https://github.com/brunelli/wl-clipboard-x11
# License: GNU General Public License v3+

CLIPBOARD_BACKEND="WL_CLIPBOARD"
CLIPBOARD_COMMAND="wl-copy"
VERSION=2

show_help() {
    cat << EOF
Usage:
    $(basename "$0") [argument...]

A wrapper to use wl-clipboard as a drop-in replacement to X11 clipboard tools.

See wl-clipboard-x11(1) for more details.
EOF
}

show_version() {
    cat << EOF
wl-clipboard-x11 ${VERSION}
Copyright (C) 2019 Ian Brunelli
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
===============================================================================
EOF
    ${CLIPBOARD_COMMAND} --version
}

case "$(basename "$0")" in
    xclip) CLIPBOARD_BACKEND="XCLIP";;
    xsel) CLIPBOARD_BACKEND="XSEL";;
esac

: $((COUNT = $#))
set -- "${@}" --

if [ "$CLIPBOARD_BACKEND" = "XCLIP" ]
then
    while [ $COUNT -ne 0 ]
    do
        case "$1" in
            -i|-in) true;;
            -o|-out)
                CLIPBOARD_COMMAND="wl-paste"
                set -- "${@}" "--no-newline"
                ;;
            -f|-filter) true;;
            -r|-rmlastnl) set -- "${@}" "--trim-newline";;
            -l|-loops)
                : $((COUNT = COUNT - 1))
                shift 1
                ;;
            -d|-display)
                : $((COUNT = COUNT -1 ))
                shift 1
                ;;
            -h|-help)
                show_help
                exit 0
                ;;
            -selection)
                case "$2" in
                    primary) set -- "${@}" "--primary";;
                    secondary) true;;
                    clipboard) true;;
                    *) set -- "${@}" "$2"
                esac
                : $((COUNT = COUNT - 1))
                shift 1
                ;;
            -version)
                show_version
                exit 0
                ;;
            -silent) shift;;
            -quiet) set -- "${@}" "--foreground";;
            -verbose) true;;
            *) set -- "${@}" "$1";;
        esac
        : $((COUNT = COUNT - 1))
        shift 1
    done
elif [ "$CLIPBOARD_BACKEND" = "XSEL" ]
then
    while [ $COUNT -ne 0 ]
    do
        case "$1" in
            -a|--append) true;;
            -f|--follow) true;;
            -i|--input) true;;
            -o|--output)
                CLIPBOARD_COMMAND="wl-paste"
                set -- "${@}" "--no-newline"
                ;;
            -c|--clear) set -- "${@}" "$1";;
            -d|--delete) set -- "${@}" "--clear";;
            -p|--primary) set -- "${@}" "$1";;
            -s|--secondary) true;;
            -b|--clipboard) true;;
            -k|--keep) true;;
            -x|--exchange) true;;
            --display)
                : $((COUNT = COUNT - 1))
                shift 1
                ;;
            -t|--selectionTimeout)
                : $((COUNT = COUNT - 1))
                shift 1
                ;;
            -l|--logfile)
                : $((COUNT = COUNT - 1))
                shift 1
                ;;
            -n|--nodetach) set -- "${@}" "--foreground";;
            -h|--help)
                show_help
                exit 0
                ;;
            -[v]*|--verbose) true;;
            --version)
                show_version
                exit 0
                ;;
            *) set -- "${@}" "$1";;
        esac
        : $((COUNT = COUNT - 1))
        shift 1
    done
else
    while [ $COUNT -ne 0 ]
    do
        case "$1" in
            -h|--help)
                show_help
                exit 0
                ;;
            -v|--version)
                show_version
                exit 0
                ;;
            *) set -- "${@}" "$1";;
        esac
        : $((COUNT = COUNT - 1))
        shift 1
    done
fi

shift

if [ -p /dev/stdin ]
then
    cat | ${CLIPBOARD_COMMAND} "${@}"
else
    ${CLIPBOARD_COMMAND} "${@}"
fi
